/*
 * generated by Xtext 2.14.0
 */
package org.xtext.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.ide.contentassist.antlr.internal.InternalMQLParser;
import org.xtext.services.MQLGrammarAccess;

public class MQLParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MQLGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MQLGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getPerson_TypeAccess().getAlternatives(), "rule__Person_Type__Alternatives");
			builder.put(grammarAccess.getRootClassAccess().getAlternatives(), "rule__RootClass__Alternatives");
			builder.put(grammarAccess.getPersonAccess().getAlternatives_3_1(), "rule__Person__Alternatives_3_1");
			builder.put(grammarAccess.getStudentAccess().getAlternatives_3_1(), "rule__Student__Alternatives_3_1");
			builder.put(grammarAccess.getProfessorAccess().getAlternatives_3_1(), "rule__Professor__Alternatives_3_1");
			builder.put(grammarAccess.getCourseAccess().getAlternatives_3_1(), "rule__Course__Alternatives_3_1");
			builder.put(grammarAccess.getCourseAccess().getAlternatives_3_2_1(), "rule__Course__Alternatives_3_2_1");
			builder.put(grammarAccess.getUniversityManagementSystemAccess().getAlternatives_3_1(), "rule__UniversityManagementSystem__Alternatives_3_1");
			builder.put(grammarAccess.getExamAccess().getAlternatives_3_1(), "rule__Exam__Alternatives_3_1");
			builder.put(grammarAccess.getFunctionalArgumentAccess().getAlternatives(), "rule__FunctionalArgument__Alternatives");
			builder.put(grammarAccess.getCalculateable_ArgumentAccess().getAlternatives(), "rule__Calculateable_Argument__Alternatives");
			builder.put(grammarAccess.getPrimitiveArgumentAccess().getAlternatives(), "rule__PrimitiveArgument__Alternatives");
			builder.put(grammarAccess.getCalculateableElement_ReferenceArgumentAccess().getAlternatives(), "rule__CalculateableElement_ReferenceArgument__Alternatives");
			builder.put(grammarAccess.getEvaluationOperation_ArgumentAccess().getAlternatives(), "rule__EvaluationOperation_Argument__Alternatives");
			builder.put(grammarAccess.getInteger_EvaluationOperation_ArgumentAccess().getAlternatives(), "rule__Integer_EvaluationOperation_Argument__Alternatives");
			builder.put(grammarAccess.getDouble_EvaluationOperation_ArgumentAccess().getAlternatives(), "rule__Double_EvaluationOperation_Argument__Alternatives");
			builder.put(grammarAccess.getInteger_ExpressionOperatorAccess().getAlternatives(), "rule__Integer_ExpressionOperator__Alternatives");
			builder.put(grammarAccess.getInteger_BitOperatorAccess().getAlternatives(), "rule__Integer_BitOperator__Alternatives");
			builder.put(grammarAccess.getNumber_ExpressionOperatorAccess().getAlternatives(), "rule__Number_ExpressionOperator__Alternatives");
			builder.put(grammarAccess.getNumber_BitOperatorAccess().getAlternatives(), "rule__Number_BitOperator__Alternatives");
			builder.put(grammarAccess.getCharacter_ExpressionOperatorAccess().getAlternatives(), "rule__Character_ExpressionOperator__Alternatives");
			builder.put(grammarAccess.getCharacter_BitOperatorAccess().getAlternatives(), "rule__Character_BitOperator__Alternatives");
			builder.put(grammarAccess.getCharSequence_ExpressionOperatorAccess().getAlternatives(), "rule__CharSequence_ExpressionOperator__Alternatives");
			builder.put(grammarAccess.getCharSequence_BitOperatorAccess().getAlternatives(), "rule__CharSequence_BitOperator__Alternatives");
			builder.put(grammarAccess.getObject_ExpressionOperatorAccess().getAlternatives(), "rule__Object_ExpressionOperator__Alternatives");
			builder.put(grammarAccess.getObject_BitOperatorAccess().getAlternatives(), "rule__Object_BitOperator__Alternatives");
			builder.put(grammarAccess.getString_ExpressionOperatorAccess().getAlternatives(), "rule__String_ExpressionOperator__Alternatives");
			builder.put(grammarAccess.getString_BitOperatorAccess().getAlternatives(), "rule__String_BitOperator__Alternatives");
			builder.put(grammarAccess.getBoolean_ExpressionOperatorAccess().getAlternatives(), "rule__Boolean_ExpressionOperator__Alternatives");
			builder.put(grammarAccess.getBoolean_BitOperatorAccess().getAlternatives(), "rule__Boolean_BitOperator__Alternatives");
			builder.put(grammarAccess.getDouble_ExpressionOperatorAccess().getAlternatives(), "rule__Double_ExpressionOperator__Alternatives");
			builder.put(grammarAccess.getDouble_BitOperatorAccess().getAlternatives(), "rule__Double_BitOperator__Alternatives");
			builder.put(grammarAccess.getInteger_FunctionalOperatorAccess().getAlternatives(), "rule__Integer_FunctionalOperator__Alternatives");
			builder.put(grammarAccess.getNumber_FunctionalOperatorAccess().getAlternatives(), "rule__Number_FunctionalOperator__Alternatives");
			builder.put(grammarAccess.getCharacter_FunctionalOperatorAccess().getAlternatives(), "rule__Character_FunctionalOperator__Alternatives");
			builder.put(grammarAccess.getCharSequence_FunctionalOperatorAccess().getAlternatives(), "rule__CharSequence_FunctionalOperator__Alternatives");
			builder.put(grammarAccess.getObject_FunctionalOperatorAccess().getAlternatives(), "rule__Object_FunctionalOperator__Alternatives");
			builder.put(grammarAccess.getString_FunctionalOperatorAccess().getAlternatives(), "rule__String_FunctionalOperator__Alternatives");
			builder.put(grammarAccess.getBoolean_FunctionalOperatorAccess().getAlternatives(), "rule__Boolean_FunctionalOperator__Alternatives");
			builder.put(grammarAccess.getDouble_FunctionalOperatorAccess().getAlternatives(), "rule__Double_FunctionalOperator__Alternatives");
			builder.put(grammarAccess.getEvaluationOperatorAccess().getAlternatives(), "rule__EvaluationOperator__Alternatives");
			builder.put(grammarAccess.getEvaluationBitOperatorAccess().getAlternatives(), "rule__EvaluationBitOperator__Alternatives");
			builder.put(grammarAccess.getAggregationOperatorAccess().getAlternatives(), "rule__AggregationOperator__Alternatives");
			builder.put(grammarAccess.getCalculatingAggregationOperatorAccess().getAlternatives(), "rule__CalculatingAggregationOperator__Alternatives");
			builder.put(grammarAccess.getCourseTypeAccess().getAlternatives(), "rule__CourseType__Alternatives");
			builder.put(grammarAccess.getFindQueryCollectionAccess().getGroup(), "rule__FindQueryCollection__Group__0");
			builder.put(grammarAccess.getFindQueryCollectionAccess().getGroup_2(), "rule__FindQueryCollection__Group_2__0");
			builder.put(grammarAccess.getFindQueryAccess().getGroup(), "rule__FindQuery__Group__0");
			builder.put(grammarAccess.getFindQueryAccess().getGroup_2(), "rule__FindQuery__Group_2__0");
			builder.put(grammarAccess.getFindQueryAccess().getGroup_3(), "rule__FindQuery__Group_3__0");
			builder.put(grammarAccess.getSelectClauseAccess().getGroup(), "rule__SelectClause__Group__0");
			builder.put(grammarAccess.getSelectClauseAccess().getGroup_2(), "rule__SelectClause__Group_2__0");
			builder.put(grammarAccess.getPersonAccess().getGroup(), "rule__Person__Group__0");
			builder.put(grammarAccess.getPersonAccess().getGroup_3(), "rule__Person__Group_3__0");
			builder.put(grammarAccess.getPersonAccess().getGroup_3_1_0(), "rule__Person__Group_3_1_0__0");
			builder.put(grammarAccess.getStudentAccess().getGroup(), "rule__Student__Group__0");
			builder.put(grammarAccess.getStudentAccess().getGroup_3(), "rule__Student__Group_3__0");
			builder.put(grammarAccess.getStudentAccess().getGroup_3_1_0(), "rule__Student__Group_3_1_0__0");
			builder.put(grammarAccess.getProfessorAccess().getGroup(), "rule__Professor__Group__0");
			builder.put(grammarAccess.getProfessorAccess().getGroup_3(), "rule__Professor__Group_3__0");
			builder.put(grammarAccess.getProfessorAccess().getGroup_3_1_0(), "rule__Professor__Group_3_1_0__0");
			builder.put(grammarAccess.getCourseAccess().getGroup(), "rule__Course__Group__0");
			builder.put(grammarAccess.getCourseAccess().getGroup_3(), "rule__Course__Group_3__0");
			builder.put(grammarAccess.getCourseAccess().getGroup_3_1_0(), "rule__Course__Group_3_1_0__0");
			builder.put(grammarAccess.getCourseAccess().getGroup_3_2(), "rule__Course__Group_3_2__0");
			builder.put(grammarAccess.getCourseAccess().getGroup_3_2_1_0(), "rule__Course__Group_3_2_1_0__0");
			builder.put(grammarAccess.getUniversityManagementSystemAccess().getGroup(), "rule__UniversityManagementSystem__Group__0");
			builder.put(grammarAccess.getUniversityManagementSystemAccess().getGroup_3(), "rule__UniversityManagementSystem__Group_3__0");
			builder.put(grammarAccess.getUniversityManagementSystemAccess().getGroup_3_1_0(), "rule__UniversityManagementSystem__Group_3_1_0__0");
			builder.put(grammarAccess.getExamAccess().getGroup(), "rule__Exam__Group__0");
			builder.put(grammarAccess.getExamAccess().getGroup_3(), "rule__Exam__Group_3__0");
			builder.put(grammarAccess.getExamAccess().getGroup_3_1_0(), "rule__Exam__Group_3_1_0__0");
			builder.put(grammarAccess.getProfessor_employeeNumber_AttrEClassAccess().getGroup(), "rule__Professor_employeeNumber_AttrEClass__Group__0");
			builder.put(grammarAccess.getProfessor_employeeNumber_AttrEClassAccess().getGroup_4(), "rule__Professor_employeeNumber_AttrEClass__Group_4__0");
			builder.put(grammarAccess.getStudent_matriculationNumber_AttrEClassAccess().getGroup(), "rule__Student_matriculationNumber_AttrEClass__Group__0");
			builder.put(grammarAccess.getStudent_matriculationNumber_AttrEClassAccess().getGroup_4(), "rule__Student_matriculationNumber_AttrEClass__Group_4__0");
			builder.put(grammarAccess.getPerson_name_AttrEClassAccess().getGroup(), "rule__Person_name_AttrEClass__Group__0");
			builder.put(grammarAccess.getPerson_name_AttrEClassAccess().getGroup_4(), "rule__Person_name_AttrEClass__Group_4__0");
			builder.put(grammarAccess.getCourse_courseType_AttrEClassAccess().getGroup(), "rule__Course_courseType_AttrEClass__Group__0");
			builder.put(grammarAccess.getCourse_courseType_AttrEClassAccess().getGroup_4(), "rule__Course_courseType_AttrEClass__Group_4__0");
			builder.put(grammarAccess.getCourse_courseNumber_AttrEClassAccess().getGroup(), "rule__Course_courseNumber_AttrEClass__Group__0");
			builder.put(grammarAccess.getCourse_courseNumber_AttrEClassAccess().getGroup_4(), "rule__Course_courseNumber_AttrEClass__Group_4__0");
			builder.put(grammarAccess.getPerson_email_AttrEClassAccess().getGroup(), "rule__Person_email_AttrEClass__Group__0");
			builder.put(grammarAccess.getPerson_email_AttrEClassAccess().getGroup_4(), "rule__Person_email_AttrEClass__Group_4__0");
			builder.put(grammarAccess.getCourse_name_AttrEClassAccess().getGroup(), "rule__Course_name_AttrEClass__Group__0");
			builder.put(grammarAccess.getCourse_name_AttrEClassAccess().getGroup_4(), "rule__Course_name_AttrEClass__Group_4__0");
			builder.put(grammarAccess.getExam_examID_AttrEClassAccess().getGroup(), "rule__Exam_examID_AttrEClass__Group__0");
			builder.put(grammarAccess.getExam_examID_AttrEClassAccess().getGroup_4(), "rule__Exam_examID_AttrEClass__Group_4__0");
			builder.put(grammarAccess.getStudent_attends_OrGroupAccess().getGroup(), "rule__Student_attends_OrGroup__Group__0");
			builder.put(grammarAccess.getStudent_attends_OrGroupAccess().getGroup_4(), "rule__Student_attends_OrGroup__Group_4__0");
			builder.put(grammarAccess.getStudent_attends_OrGroupAccess().getGroup_4_2(), "rule__Student_attends_OrGroup__Group_4_2__0");
			builder.put(grammarAccess.getProfessor_lectures_OrGroupAccess().getGroup(), "rule__Professor_lectures_OrGroup__Group__0");
			builder.put(grammarAccess.getProfessor_lectures_OrGroupAccess().getGroup_4(), "rule__Professor_lectures_OrGroup__Group_4__0");
			builder.put(grammarAccess.getProfessor_lectures_OrGroupAccess().getGroup_4_2(), "rule__Professor_lectures_OrGroup__Group_4_2__0");
			builder.put(grammarAccess.getCourse_exam_OrGroupAccess().getGroup(), "rule__Course_exam_OrGroup__Group__0");
			builder.put(grammarAccess.getCourse_exam_OrGroupAccess().getGroup_4(), "rule__Course_exam_OrGroup__Group_4__0");
			builder.put(grammarAccess.getCourse_exam_OrGroupAccess().getGroup_4_2(), "rule__Course_exam_OrGroup__Group_4_2__0");
			builder.put(grammarAccess.getCourse_mandatoryFor_OrGroupAccess().getGroup(), "rule__Course_mandatoryFor_OrGroup__Group__0");
			builder.put(grammarAccess.getCourse_mandatoryFor_OrGroupAccess().getGroup_4(), "rule__Course_mandatoryFor_OrGroup__Group_4__0");
			builder.put(grammarAccess.getCourse_mandatoryFor_OrGroupAccess().getGroup_4_2(), "rule__Course_mandatoryFor_OrGroup__Group_4_2__0");
			builder.put(grammarAccess.getUniversityManagementSystem_person_OrGroupAccess().getGroup(), "rule__UniversityManagementSystem_person_OrGroup__Group__0");
			builder.put(grammarAccess.getUniversityManagementSystem_person_OrGroupAccess().getGroup_4(), "rule__UniversityManagementSystem_person_OrGroup__Group_4__0");
			builder.put(grammarAccess.getUniversityManagementSystem_person_OrGroupAccess().getGroup_4_2(), "rule__UniversityManagementSystem_person_OrGroup__Group_4_2__0");
			builder.put(grammarAccess.getUniversityManagementSystem_course_OrGroupAccess().getGroup(), "rule__UniversityManagementSystem_course_OrGroup__Group__0");
			builder.put(grammarAccess.getUniversityManagementSystem_course_OrGroupAccess().getGroup_4(), "rule__UniversityManagementSystem_course_OrGroup__Group_4__0");
			builder.put(grammarAccess.getUniversityManagementSystem_course_OrGroupAccess().getGroup_4_2(), "rule__UniversityManagementSystem_course_OrGroup__Group_4_2__0");
			builder.put(grammarAccess.getInteger_PrimitiveArgumentAccess().getGroup(), "rule__Integer_PrimitiveArgument__Group__0");
			builder.put(grammarAccess.getString_PrimitiveArgumentAccess().getGroup(), "rule__String_PrimitiveArgument__Group__0");
			builder.put(grammarAccess.getInteger_CalculateableElementReferenceArgumentAccess().getGroup(), "rule__Integer_CalculateableElementReferenceArgument__Group__0");
			builder.put(grammarAccess.getString_CalculateableElementReferenceArgumentAccess().getGroup(), "rule__String_CalculateableElementReferenceArgument__Group__0");
			builder.put(grammarAccess.getCountable_ReferenceArgumentAccess().getGroup(), "rule__Countable_ReferenceArgument__Group__0");
			builder.put(grammarAccess.getInteger_FunctionalParameterAccess().getGroup(), "rule__Integer_FunctionalParameter__Group__0");
			builder.put(grammarAccess.getCharacter_FunctionalParameterAccess().getGroup(), "rule__Character_FunctionalParameter__Group__0");
			builder.put(grammarAccess.getNumber_FunctionalParameterAccess().getGroup(), "rule__Number_FunctionalParameter__Group__0");
			builder.put(grammarAccess.getCharSequence_FunctionalParameterAccess().getGroup(), "rule__CharSequence_FunctionalParameter__Group__0");
			builder.put(grammarAccess.getObject_FunctionalParameterAccess().getGroup(), "rule__Object_FunctionalParameter__Group__0");
			builder.put(grammarAccess.getString_FunctionalParameterAccess().getGroup(), "rule__String_FunctionalParameter__Group__0");
			builder.put(grammarAccess.getBoolean_FunctionalParameterAccess().getGroup(), "rule__Boolean_FunctionalParameter__Group__0");
			builder.put(grammarAccess.getDouble_FunctionalParameterAccess().getGroup(), "rule__Double_FunctionalParameter__Group__0");
			builder.put(grammarAccess.getCountableReferenceParameterAccess().getGroup(), "rule__CountableReferenceParameter__Group__0");
			builder.put(grammarAccess.getInteger_CalculateableParameterAccess().getGroup(), "rule__Integer_CalculateableParameter__Group__0");
			builder.put(grammarAccess.getCharacter_CalculateableParameterAccess().getGroup(), "rule__Character_CalculateableParameter__Group__0");
			builder.put(grammarAccess.getNumber_CalculateableParameterAccess().getGroup(), "rule__Number_CalculateableParameter__Group__0");
			builder.put(grammarAccess.getCharSequence_CalculateableParameterAccess().getGroup(), "rule__CharSequence_CalculateableParameter__Group__0");
			builder.put(grammarAccess.getObject_CalculateableParameterAccess().getGroup(), "rule__Object_CalculateableParameter__Group__0");
			builder.put(grammarAccess.getString_CalculateableParameterAccess().getGroup(), "rule__String_CalculateableParameter__Group__0");
			builder.put(grammarAccess.getBoolean_CalculateableParameterAccess().getGroup(), "rule__Boolean_CalculateableParameter__Group__0");
			builder.put(grammarAccess.getDouble_CalculateableParameterAccess().getGroup(), "rule__Double_CalculateableParameter__Group__0");
			builder.put(grammarAccess.getCourseType_EnumerationOperatorAccess().getGroup(), "rule__CourseType_EnumerationOperator__Group__0");
			builder.put(grammarAccess.getCourseType_EnumerationOperatorAccess().getGroup_2(), "rule__CourseType_EnumerationOperator__Group_2__0");
			builder.put(grammarAccess.getInteger_And_BitOperatorAccess().getGroup(), "rule__Integer_And_BitOperator__Group__0");
			builder.put(grammarAccess.getInteger_And_BitOperatorAccess().getGroup_5(), "rule__Integer_And_BitOperator__Group_5__0");
			builder.put(grammarAccess.getInteger_Or_BitOperatorAccess().getGroup(), "rule__Integer_Or_BitOperator__Group__0");
			builder.put(grammarAccess.getInteger_Or_BitOperatorAccess().getGroup_5(), "rule__Integer_Or_BitOperator__Group_5__0");
			builder.put(grammarAccess.getInteger_FunctionalOperator_BeginAccess().getGroup(), "rule__Integer_FunctionalOperator_Begin__Group__0");
			builder.put(grammarAccess.getNumber_And_BitOperatorAccess().getGroup(), "rule__Number_And_BitOperator__Group__0");
			builder.put(grammarAccess.getNumber_And_BitOperatorAccess().getGroup_5(), "rule__Number_And_BitOperator__Group_5__0");
			builder.put(grammarAccess.getNumber_Or_BitOperatorAccess().getGroup(), "rule__Number_Or_BitOperator__Group__0");
			builder.put(grammarAccess.getNumber_Or_BitOperatorAccess().getGroup_5(), "rule__Number_Or_BitOperator__Group_5__0");
			builder.put(grammarAccess.getNumber_FunctionalOperator_BeginAccess().getGroup(), "rule__Number_FunctionalOperator_Begin__Group__0");
			builder.put(grammarAccess.getCharacter_And_BitOperatorAccess().getGroup(), "rule__Character_And_BitOperator__Group__0");
			builder.put(grammarAccess.getCharacter_And_BitOperatorAccess().getGroup_5(), "rule__Character_And_BitOperator__Group_5__0");
			builder.put(grammarAccess.getCharacter_Or_BitOperatorAccess().getGroup(), "rule__Character_Or_BitOperator__Group__0");
			builder.put(grammarAccess.getCharacter_Or_BitOperatorAccess().getGroup_5(), "rule__Character_Or_BitOperator__Group_5__0");
			builder.put(grammarAccess.getCharacter_FunctionalOperator_BeginAccess().getGroup(), "rule__Character_FunctionalOperator_Begin__Group__0");
			builder.put(grammarAccess.getCharSequence_And_BitOperatorAccess().getGroup(), "rule__CharSequence_And_BitOperator__Group__0");
			builder.put(grammarAccess.getCharSequence_And_BitOperatorAccess().getGroup_5(), "rule__CharSequence_And_BitOperator__Group_5__0");
			builder.put(grammarAccess.getCharSequence_Or_BitOperatorAccess().getGroup(), "rule__CharSequence_Or_BitOperator__Group__0");
			builder.put(grammarAccess.getCharSequence_Or_BitOperatorAccess().getGroup_5(), "rule__CharSequence_Or_BitOperator__Group_5__0");
			builder.put(grammarAccess.getCharSequence_FunctionalOperator_BeginAccess().getGroup(), "rule__CharSequence_FunctionalOperator_Begin__Group__0");
			builder.put(grammarAccess.getObject_And_BitOperatorAccess().getGroup(), "rule__Object_And_BitOperator__Group__0");
			builder.put(grammarAccess.getObject_And_BitOperatorAccess().getGroup_5(), "rule__Object_And_BitOperator__Group_5__0");
			builder.put(grammarAccess.getObject_Or_BitOperatorAccess().getGroup(), "rule__Object_Or_BitOperator__Group__0");
			builder.put(grammarAccess.getObject_Or_BitOperatorAccess().getGroup_5(), "rule__Object_Or_BitOperator__Group_5__0");
			builder.put(grammarAccess.getObject_FunctionalOperator_BeginAccess().getGroup(), "rule__Object_FunctionalOperator_Begin__Group__0");
			builder.put(grammarAccess.getString_And_BitOperatorAccess().getGroup(), "rule__String_And_BitOperator__Group__0");
			builder.put(grammarAccess.getString_And_BitOperatorAccess().getGroup_5(), "rule__String_And_BitOperator__Group_5__0");
			builder.put(grammarAccess.getString_Or_BitOperatorAccess().getGroup(), "rule__String_Or_BitOperator__Group__0");
			builder.put(grammarAccess.getString_Or_BitOperatorAccess().getGroup_5(), "rule__String_Or_BitOperator__Group_5__0");
			builder.put(grammarAccess.getString_FunctionalOperator_BeginAccess().getGroup(), "rule__String_FunctionalOperator_Begin__Group__0");
			builder.put(grammarAccess.getBoolean_And_BitOperatorAccess().getGroup(), "rule__Boolean_And_BitOperator__Group__0");
			builder.put(grammarAccess.getBoolean_And_BitOperatorAccess().getGroup_5(), "rule__Boolean_And_BitOperator__Group_5__0");
			builder.put(grammarAccess.getBoolean_Or_BitOperatorAccess().getGroup(), "rule__Boolean_Or_BitOperator__Group__0");
			builder.put(grammarAccess.getBoolean_Or_BitOperatorAccess().getGroup_5(), "rule__Boolean_Or_BitOperator__Group_5__0");
			builder.put(grammarAccess.getBoolean_FunctionalOperator_BeginAccess().getGroup(), "rule__Boolean_FunctionalOperator_Begin__Group__0");
			builder.put(grammarAccess.getDouble_And_BitOperatorAccess().getGroup(), "rule__Double_And_BitOperator__Group__0");
			builder.put(grammarAccess.getDouble_And_BitOperatorAccess().getGroup_5(), "rule__Double_And_BitOperator__Group_5__0");
			builder.put(grammarAccess.getDouble_Or_BitOperatorAccess().getGroup(), "rule__Double_Or_BitOperator__Group__0");
			builder.put(grammarAccess.getDouble_Or_BitOperatorAccess().getGroup_5(), "rule__Double_Or_BitOperator__Group_5__0");
			builder.put(grammarAccess.getDouble_FunctionalOperator_BeginAccess().getGroup(), "rule__Double_FunctionalOperator_Begin__Group__0");
			builder.put(grammarAccess.getDoubleValue_FunctionalOperatorAccess().getGroup(), "rule__DoubleValue_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getNumber_Integer_greaterThan_FunctionalOperatorAccess().getGroup(), "rule__Number_Integer_greaterThan_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getNumber_Integer_greaterEquals_FunctionalOperatorAccess().getGroup(), "rule__Number_Integer_greaterEquals_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getNumber_Integer_smallerThan_FunctionalOperatorAccess().getGroup(), "rule__Number_Integer_smallerThan_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getNumber_Integer_smallerEquals_FunctionalOperatorAccess().getGroup(), "rule__Number_Integer_smallerEquals_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getNumber_Integer_Object_Number_equals_FunctionalOperatorAccess().getGroup(), "rule__Number_Integer_Object_Number_equals_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getNumber_Integer_Object_Number_toString_FunctionalOperatorAccess().getGroup(), "rule__Number_Integer_Object_Number_toString_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getNumber_Integer_Object_Number_hashCode_FunctionalOperatorAccess().getGroup(), "rule__Number_Integer_Object_Number_hashCode_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getGreaterThan_FunctionalOperatorAccess().getGroup(), "rule__GreaterThan_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getGreaterEquals_FunctionalOperatorAccess().getGroup(), "rule__GreaterEquals_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getSmallerThan_FunctionalOperatorAccess().getGroup(), "rule__SmallerThan_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getSmallerEquals_FunctionalOperatorAccess().getGroup(), "rule__SmallerEquals_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getObject_Number_equals_FunctionalOperatorAccess().getGroup(), "rule__Object_Number_equals_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getObject_Number_toString_FunctionalOperatorAccess().getGroup(), "rule__Object_Number_toString_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getObject_Number_hashCode_FunctionalOperatorAccess().getGroup(), "rule__Object_Number_hashCode_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getObject_Character_equals_FunctionalOperatorAccess().getGroup(), "rule__Object_Character_equals_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getObject_Character_toString_FunctionalOperatorAccess().getGroup(), "rule__Object_Character_toString_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getObject_Character_hashCode_FunctionalOperatorAccess().getGroup(), "rule__Object_Character_hashCode_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getLength_FunctionalOperatorAccess().getGroup(), "rule__Length_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getObject_CharSequence_equals_FunctionalOperatorAccess().getGroup(), "rule__Object_CharSequence_equals_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getObject_CharSequence_toString_FunctionalOperatorAccess().getGroup(), "rule__Object_CharSequence_toString_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getObject_CharSequence_hashCode_FunctionalOperatorAccess().getGroup(), "rule__Object_CharSequence_hashCode_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getEquals_FunctionalOperatorAccess().getGroup(), "rule__Equals_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getToString_FunctionalOperatorAccess().getGroup(), "rule__ToString_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getHashCode_FunctionalOperatorAccess().getGroup(), "rule__HashCode_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getCharAt_FunctionalOperatorAccess().getGroup(), "rule__CharAt_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getCodePointAt_FunctionalOperatorAccess().getGroup(), "rule__CodePointAt_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getCodePointBefore_FunctionalOperatorAccess().getGroup(), "rule__CodePointBefore_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getCompareToString_FunctionalOperatorAccess().getGroup(), "rule__CompareToString_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getCompareToStringIgnoreCase_FunctionalOperatorAccess().getGroup(), "rule__CompareToStringIgnoreCase_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getContains_FunctionalOperatorAccess().getGroup(), "rule__Contains_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getSubstring_FunctionalOperatorAccess().getGroup(), "rule__Substring_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getConcat_FunctionalOperatorAccess().getGroup(), "rule__Concat_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getEndsWith_FunctionalOperatorAccess().getGroup(), "rule__EndsWith_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getEqualsIgnoreCase_FunctionalOperatorAccess().getGroup(), "rule__EqualsIgnoreCase_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getIndexOfString_FunctionalOperatorAccess().getGroup(), "rule__IndexOfString_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getIndexOfChar_FunctionalOperatorAccess().getGroup(), "rule__IndexOfChar_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getIndexOfCharFromIndex_FunctionalOperatorAccess().getGroup(), "rule__IndexOfCharFromIndex_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getIsEmpty_FunctionalOperatorAccess().getGroup(), "rule__IsEmpty_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getOffsetByCodePoints_FunctionalOperatorAccess().getGroup(), "rule__OffsetByCodePoints_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getStartsWith_FunctionalOperatorAccess().getGroup(), "rule__StartsWith_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getStartsWithOffset_FunctionalOperatorAccess().getGroup(), "rule__StartsWithOffset_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getToLowerCase_FunctionalOperatorAccess().getGroup(), "rule__ToLowerCase_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getToUpperCase_FunctionalOperatorAccess().getGroup(), "rule__ToUpperCase_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getTrim_FunctionalOperatorAccess().getGroup(), "rule__Trim_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getCharSequence_String_length_FunctionalOperatorAccess().getGroup(), "rule__CharSequence_String_length_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getCharSequence_String_Object_CharSequence_equals_FunctionalOperatorAccess().getGroup(), "rule__CharSequence_String_Object_CharSequence_equals_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getCharSequence_String_Object_CharSequence_toString_FunctionalOperatorAccess().getGroup(), "rule__CharSequence_String_Object_CharSequence_toString_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getCharSequence_String_Object_CharSequence_hashCode_FunctionalOperatorAccess().getGroup(), "rule__CharSequence_String_Object_CharSequence_hashCode_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getParseBoolean_FunctionalOperatorAccess().getGroup(), "rule__ParseBoolean_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getCompareToBoolean_FunctionalOperatorAccess().getGroup(), "rule__CompareToBoolean_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getObject_Boolean_equals_FunctionalOperatorAccess().getGroup(), "rule__Object_Boolean_equals_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getObject_Boolean_toString_FunctionalOperatorAccess().getGroup(), "rule__Object_Boolean_toString_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getObject_Boolean_hashCode_FunctionalOperatorAccess().getGroup(), "rule__Object_Boolean_hashCode_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getNumber_Double_greaterThan_FunctionalOperatorAccess().getGroup(), "rule__Number_Double_greaterThan_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getNumber_Double_greaterEquals_FunctionalOperatorAccess().getGroup(), "rule__Number_Double_greaterEquals_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getNumber_Double_smallerThan_FunctionalOperatorAccess().getGroup(), "rule__Number_Double_smallerThan_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getNumber_Double_smallerEquals_FunctionalOperatorAccess().getGroup(), "rule__Number_Double_smallerEquals_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getNumber_Double_Object_Number_equals_FunctionalOperatorAccess().getGroup(), "rule__Number_Double_Object_Number_equals_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getNumber_Double_Object_Number_toString_FunctionalOperatorAccess().getGroup(), "rule__Number_Double_Object_Number_toString_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getNumber_Double_Object_Number_hashCode_FunctionalOperatorAccess().getGroup(), "rule__Number_Double_Object_Number_hashCode_FunctionalOperator__Group__0");
			builder.put(grammarAccess.getAnd_EvaluationBitOperatorAccess().getGroup(), "rule__And_EvaluationBitOperator__Group__0");
			builder.put(grammarAccess.getAnd_EvaluationBitOperatorAccess().getGroup_4(), "rule__And_EvaluationBitOperator__Group_4__0");
			builder.put(grammarAccess.getOr_EvaluationBitOperatorAccess().getGroup(), "rule__Or_EvaluationBitOperator__Group__0");
			builder.put(grammarAccess.getOr_EvaluationBitOperatorAccess().getGroup_4(), "rule__Or_EvaluationBitOperator__Group_4__0");
			builder.put(grammarAccess.getCount_AggregationOperatorAccess().getGroup(), "rule__Count_AggregationOperator__Group__0");
			builder.put(grammarAccess.getSum_AggregationOperator_IntegerAccess().getGroup(), "rule__Sum_AggregationOperator_Integer__Group__0");
			builder.put(grammarAccess.getMin_AggregationOperator_IntegerAccess().getGroup(), "rule__Min_AggregationOperator_Integer__Group__0");
			builder.put(grammarAccess.getMax_AggregationOperator_IntegerAccess().getGroup(), "rule__Max_AggregationOperator_Integer__Group__0");
			builder.put(grammarAccess.getIntegerParseInt_ClassOperatorAccess().getGroup(), "rule__IntegerParseInt_ClassOperator__Group__0");
			builder.put(grammarAccess.getSum_AggregationOperator_DoubleAccess().getGroup(), "rule__Sum_AggregationOperator_Double__Group__0");
			builder.put(grammarAccess.getMin_AggregationOperator_DoubleAccess().getGroup(), "rule__Min_AggregationOperator_Double__Group__0");
			builder.put(grammarAccess.getMax_AggregationOperator_DoubleAccess().getGroup(), "rule__Max_AggregationOperator_Double__Group__0");
			builder.put(grammarAccess.getFindQueryCollectionAccess().getFindQueriesAssignment_1(), "rule__FindQueryCollection__FindQueriesAssignment_1");
			builder.put(grammarAccess.getFindQueryCollectionAccess().getFindQueriesAssignment_2_1(), "rule__FindQueryCollection__FindQueriesAssignment_2_1");
			builder.put(grammarAccess.getFindQueryAccess().getRootClassAssignment_2_0(), "rule__FindQuery__RootClassAssignment_2_0");
			builder.put(grammarAccess.getFindQueryAccess().getSelectAssignment_3_1(), "rule__FindQuery__SelectAssignment_3_1");
			builder.put(grammarAccess.getSelectClauseAccess().getNamedElementsAssignment_1(), "rule__SelectClause__NamedElementsAssignment_1");
			builder.put(grammarAccess.getSelectClauseAccess().getNamedElementsAssignment_2_1(), "rule__SelectClause__NamedElementsAssignment_2_1");
			builder.put(grammarAccess.getPersonAccess().getNameAssignment_2(), "rule__Person__NameAssignment_2");
			builder.put(grammarAccess.getPersonAccess().getEvaluationOperatorAssignment_3_1_0_1(), "rule__Person__EvaluationOperatorAssignment_3_1_0_1");
			builder.put(grammarAccess.getPersonAccess().getEmail_AttrEClassAssignment_3_1_1(), "rule__Person__Email_AttrEClassAssignment_3_1_1");
			builder.put(grammarAccess.getPersonAccess().getName_AttrEClassAssignment_3_1_2(), "rule__Person__Name_AttrEClassAssignment_3_1_2");
			builder.put(grammarAccess.getStudentAccess().getNameAssignment_2(), "rule__Student__NameAssignment_2");
			builder.put(grammarAccess.getStudentAccess().getEvaluationOperatorAssignment_3_1_0_1(), "rule__Student__EvaluationOperatorAssignment_3_1_0_1");
			builder.put(grammarAccess.getStudentAccess().getEmail_AttrEClassAssignment_3_1_1(), "rule__Student__Email_AttrEClassAssignment_3_1_1");
			builder.put(grammarAccess.getStudentAccess().getMatriculationNumber_AttrEClassAssignment_3_1_2(), "rule__Student__MatriculationNumber_AttrEClassAssignment_3_1_2");
			builder.put(grammarAccess.getStudentAccess().getName_AttrEClassAssignment_3_1_3(), "rule__Student__Name_AttrEClassAssignment_3_1_3");
			builder.put(grammarAccess.getStudentAccess().getAttendsAssignment_3_1_4(), "rule__Student__AttendsAssignment_3_1_4");
			builder.put(grammarAccess.getProfessorAccess().getNameAssignment_2(), "rule__Professor__NameAssignment_2");
			builder.put(grammarAccess.getProfessorAccess().getEvaluationOperatorAssignment_3_1_0_1(), "rule__Professor__EvaluationOperatorAssignment_3_1_0_1");
			builder.put(grammarAccess.getProfessorAccess().getEmail_AttrEClassAssignment_3_1_1(), "rule__Professor__Email_AttrEClassAssignment_3_1_1");
			builder.put(grammarAccess.getProfessorAccess().getName_AttrEClassAssignment_3_1_2(), "rule__Professor__Name_AttrEClassAssignment_3_1_2");
			builder.put(grammarAccess.getProfessorAccess().getEmployeeNumber_AttrEClassAssignment_3_1_3(), "rule__Professor__EmployeeNumber_AttrEClassAssignment_3_1_3");
			builder.put(grammarAccess.getProfessorAccess().getLecturesAssignment_3_1_4(), "rule__Professor__LecturesAssignment_3_1_4");
			builder.put(grammarAccess.getCourseAccess().getNameAssignment_2(), "rule__Course__NameAssignment_2");
			builder.put(grammarAccess.getCourseAccess().getEvaluationOperatorAssignment_3_1_0_1(), "rule__Course__EvaluationOperatorAssignment_3_1_0_1");
			builder.put(grammarAccess.getCourseAccess().getCourseNumber_AttrEClassAssignment_3_1_1(), "rule__Course__CourseNumber_AttrEClassAssignment_3_1_1");
			builder.put(grammarAccess.getCourseAccess().getExamAssignment_3_1_2(), "rule__Course__ExamAssignment_3_1_2");
			builder.put(grammarAccess.getCourseAccess().getMandatoryForAssignment_3_1_3(), "rule__Course__MandatoryForAssignment_3_1_3");
			builder.put(grammarAccess.getCourseAccess().getName_AttrEClassAssignment_3_1_4(), "rule__Course__Name_AttrEClassAssignment_3_1_4");
			builder.put(grammarAccess.getCourseAccess().getCourseType_AttrEClassAssignment_3_2_0(), "rule__Course__CourseType_AttrEClassAssignment_3_2_0");
			builder.put(grammarAccess.getCourseAccess().getEvaluationOperatorAssignment_3_2_1_0_1(), "rule__Course__EvaluationOperatorAssignment_3_2_1_0_1");
			builder.put(grammarAccess.getCourseAccess().getCourseNumber_AttrEClassAssignment_3_2_1_1(), "rule__Course__CourseNumber_AttrEClassAssignment_3_2_1_1");
			builder.put(grammarAccess.getCourseAccess().getExamAssignment_3_2_1_2(), "rule__Course__ExamAssignment_3_2_1_2");
			builder.put(grammarAccess.getCourseAccess().getMandatoryForAssignment_3_2_1_3(), "rule__Course__MandatoryForAssignment_3_2_1_3");
			builder.put(grammarAccess.getCourseAccess().getName_AttrEClassAssignment_3_2_1_4(), "rule__Course__Name_AttrEClassAssignment_3_2_1_4");
			builder.put(grammarAccess.getUniversityManagementSystemAccess().getNameAssignment_2(), "rule__UniversityManagementSystem__NameAssignment_2");
			builder.put(grammarAccess.getUniversityManagementSystemAccess().getEvaluationOperatorAssignment_3_1_0_1(), "rule__UniversityManagementSystem__EvaluationOperatorAssignment_3_1_0_1");
			builder.put(grammarAccess.getUniversityManagementSystemAccess().getPersonAssignment_3_1_1(), "rule__UniversityManagementSystem__PersonAssignment_3_1_1");
			builder.put(grammarAccess.getUniversityManagementSystemAccess().getCourseAssignment_3_1_2(), "rule__UniversityManagementSystem__CourseAssignment_3_1_2");
			builder.put(grammarAccess.getExamAccess().getNameAssignment_2(), "rule__Exam__NameAssignment_2");
			builder.put(grammarAccess.getExamAccess().getEvaluationOperatorAssignment_3_1_0_1(), "rule__Exam__EvaluationOperatorAssignment_3_1_0_1");
			builder.put(grammarAccess.getExamAccess().getExamID_AttrEClassAssignment_3_1_1(), "rule__Exam__ExamID_AttrEClassAssignment_3_1_1");
			builder.put(grammarAccess.getProfessor_employeeNumber_AttrEClassAccess().getNegatedAssignment_2_0(), "rule__Professor_employeeNumber_AttrEClass__NegatedAssignment_2_0");
			builder.put(grammarAccess.getProfessor_employeeNumber_AttrEClassAccess().getGeneralizedAssignment_2_1(), "rule__Professor_employeeNumber_AttrEClass__GeneralizedAssignment_2_1");
			builder.put(grammarAccess.getProfessor_employeeNumber_AttrEClassAccess().getNameAssignment_3(), "rule__Professor_employeeNumber_AttrEClass__NameAssignment_3");
			builder.put(grammarAccess.getProfessor_employeeNumber_AttrEClassAccess().getOperatorAssignment_4_1(), "rule__Professor_employeeNumber_AttrEClass__OperatorAssignment_4_1");
			builder.put(grammarAccess.getStudent_matriculationNumber_AttrEClassAccess().getNegatedAssignment_2_0(), "rule__Student_matriculationNumber_AttrEClass__NegatedAssignment_2_0");
			builder.put(grammarAccess.getStudent_matriculationNumber_AttrEClassAccess().getGeneralizedAssignment_2_1(), "rule__Student_matriculationNumber_AttrEClass__GeneralizedAssignment_2_1");
			builder.put(grammarAccess.getStudent_matriculationNumber_AttrEClassAccess().getNameAssignment_3(), "rule__Student_matriculationNumber_AttrEClass__NameAssignment_3");
			builder.put(grammarAccess.getStudent_matriculationNumber_AttrEClassAccess().getOperatorAssignment_4_1(), "rule__Student_matriculationNumber_AttrEClass__OperatorAssignment_4_1");
			builder.put(grammarAccess.getPerson_name_AttrEClassAccess().getNegatedAssignment_2_0(), "rule__Person_name_AttrEClass__NegatedAssignment_2_0");
			builder.put(grammarAccess.getPerson_name_AttrEClassAccess().getGeneralizedAssignment_2_1(), "rule__Person_name_AttrEClass__GeneralizedAssignment_2_1");
			builder.put(grammarAccess.getPerson_name_AttrEClassAccess().getNameAssignment_3(), "rule__Person_name_AttrEClass__NameAssignment_3");
			builder.put(grammarAccess.getPerson_name_AttrEClassAccess().getOperatorAssignment_4_1(), "rule__Person_name_AttrEClass__OperatorAssignment_4_1");
			builder.put(grammarAccess.getCourse_courseType_AttrEClassAccess().getNegatedAssignment_2(), "rule__Course_courseType_AttrEClass__NegatedAssignment_2");
			builder.put(grammarAccess.getCourse_courseType_AttrEClassAccess().getNameAssignment_3(), "rule__Course_courseType_AttrEClass__NameAssignment_3");
			builder.put(grammarAccess.getCourse_courseType_AttrEClassAccess().getOperatorAssignment_4_1(), "rule__Course_courseType_AttrEClass__OperatorAssignment_4_1");
			builder.put(grammarAccess.getCourse_courseNumber_AttrEClassAccess().getNegatedAssignment_2_0(), "rule__Course_courseNumber_AttrEClass__NegatedAssignment_2_0");
			builder.put(grammarAccess.getCourse_courseNumber_AttrEClassAccess().getGeneralizedAssignment_2_1(), "rule__Course_courseNumber_AttrEClass__GeneralizedAssignment_2_1");
			builder.put(grammarAccess.getCourse_courseNumber_AttrEClassAccess().getNameAssignment_3(), "rule__Course_courseNumber_AttrEClass__NameAssignment_3");
			builder.put(grammarAccess.getCourse_courseNumber_AttrEClassAccess().getOperatorAssignment_4_1(), "rule__Course_courseNumber_AttrEClass__OperatorAssignment_4_1");
			builder.put(grammarAccess.getPerson_email_AttrEClassAccess().getNegatedAssignment_2_0(), "rule__Person_email_AttrEClass__NegatedAssignment_2_0");
			builder.put(grammarAccess.getPerson_email_AttrEClassAccess().getGeneralizedAssignment_2_1(), "rule__Person_email_AttrEClass__GeneralizedAssignment_2_1");
			builder.put(grammarAccess.getPerson_email_AttrEClassAccess().getNameAssignment_3(), "rule__Person_email_AttrEClass__NameAssignment_3");
			builder.put(grammarAccess.getPerson_email_AttrEClassAccess().getOperatorAssignment_4_1(), "rule__Person_email_AttrEClass__OperatorAssignment_4_1");
			builder.put(grammarAccess.getCourse_name_AttrEClassAccess().getNegatedAssignment_2_0(), "rule__Course_name_AttrEClass__NegatedAssignment_2_0");
			builder.put(grammarAccess.getCourse_name_AttrEClassAccess().getGeneralizedAssignment_2_1(), "rule__Course_name_AttrEClass__GeneralizedAssignment_2_1");
			builder.put(grammarAccess.getCourse_name_AttrEClassAccess().getNameAssignment_3(), "rule__Course_name_AttrEClass__NameAssignment_3");
			builder.put(grammarAccess.getCourse_name_AttrEClassAccess().getOperatorAssignment_4_1(), "rule__Course_name_AttrEClass__OperatorAssignment_4_1");
			builder.put(grammarAccess.getExam_examID_AttrEClassAccess().getNegatedAssignment_2_0(), "rule__Exam_examID_AttrEClass__NegatedAssignment_2_0");
			builder.put(grammarAccess.getExam_examID_AttrEClassAccess().getGeneralizedAssignment_2_1(), "rule__Exam_examID_AttrEClass__GeneralizedAssignment_2_1");
			builder.put(grammarAccess.getExam_examID_AttrEClassAccess().getNameAssignment_3(), "rule__Exam_examID_AttrEClass__NameAssignment_3");
			builder.put(grammarAccess.getExam_examID_AttrEClassAccess().getOperatorAssignment_4_1(), "rule__Exam_examID_AttrEClass__OperatorAssignment_4_1");
			builder.put(grammarAccess.getStudent_attends_OrGroupAccess().getNegatedAssignment_2_0(), "rule__Student_attends_OrGroup__NegatedAssignment_2_0");
			builder.put(grammarAccess.getStudent_attends_OrGroupAccess().getTransitiveAssignment_2_1(), "rule__Student_attends_OrGroup__TransitiveAssignment_2_1");
			builder.put(grammarAccess.getStudent_attends_OrGroupAccess().getGeneralizedAssignment_2_2(), "rule__Student_attends_OrGroup__GeneralizedAssignment_2_2");
			builder.put(grammarAccess.getStudent_attends_OrGroupAccess().getNameAssignment_3(), "rule__Student_attends_OrGroup__NameAssignment_3");
			builder.put(grammarAccess.getStudent_attends_OrGroupAccess().getReferenceAssignment_4_1(), "rule__Student_attends_OrGroup__ReferenceAssignment_4_1");
			builder.put(grammarAccess.getStudent_attends_OrGroupAccess().getReferenceAssignment_4_2_1(), "rule__Student_attends_OrGroup__ReferenceAssignment_4_2_1");
			builder.put(grammarAccess.getProfessor_lectures_OrGroupAccess().getNegatedAssignment_2_0(), "rule__Professor_lectures_OrGroup__NegatedAssignment_2_0");
			builder.put(grammarAccess.getProfessor_lectures_OrGroupAccess().getTransitiveAssignment_2_1(), "rule__Professor_lectures_OrGroup__TransitiveAssignment_2_1");
			builder.put(grammarAccess.getProfessor_lectures_OrGroupAccess().getGeneralizedAssignment_2_2(), "rule__Professor_lectures_OrGroup__GeneralizedAssignment_2_2");
			builder.put(grammarAccess.getProfessor_lectures_OrGroupAccess().getNameAssignment_3(), "rule__Professor_lectures_OrGroup__NameAssignment_3");
			builder.put(grammarAccess.getProfessor_lectures_OrGroupAccess().getReferenceAssignment_4_1(), "rule__Professor_lectures_OrGroup__ReferenceAssignment_4_1");
			builder.put(grammarAccess.getProfessor_lectures_OrGroupAccess().getReferenceAssignment_4_2_1(), "rule__Professor_lectures_OrGroup__ReferenceAssignment_4_2_1");
			builder.put(grammarAccess.getCourse_exam_OrGroupAccess().getNegatedAssignment_2_0(), "rule__Course_exam_OrGroup__NegatedAssignment_2_0");
			builder.put(grammarAccess.getCourse_exam_OrGroupAccess().getTransitiveAssignment_2_1(), "rule__Course_exam_OrGroup__TransitiveAssignment_2_1");
			builder.put(grammarAccess.getCourse_exam_OrGroupAccess().getGeneralizedAssignment_2_2(), "rule__Course_exam_OrGroup__GeneralizedAssignment_2_2");
			builder.put(grammarAccess.getCourse_exam_OrGroupAccess().getNameAssignment_3(), "rule__Course_exam_OrGroup__NameAssignment_3");
			builder.put(grammarAccess.getCourse_exam_OrGroupAccess().getContainmentAssignment_4_1(), "rule__Course_exam_OrGroup__ContainmentAssignment_4_1");
			builder.put(grammarAccess.getCourse_exam_OrGroupAccess().getContainmentAssignment_4_2_1(), "rule__Course_exam_OrGroup__ContainmentAssignment_4_2_1");
			builder.put(grammarAccess.getCourse_mandatoryFor_OrGroupAccess().getNegatedAssignment_2_0(), "rule__Course_mandatoryFor_OrGroup__NegatedAssignment_2_0");
			builder.put(grammarAccess.getCourse_mandatoryFor_OrGroupAccess().getTransitiveAssignment_2_1(), "rule__Course_mandatoryFor_OrGroup__TransitiveAssignment_2_1");
			builder.put(grammarAccess.getCourse_mandatoryFor_OrGroupAccess().getGeneralizedAssignment_2_2(), "rule__Course_mandatoryFor_OrGroup__GeneralizedAssignment_2_2");
			builder.put(grammarAccess.getCourse_mandatoryFor_OrGroupAccess().getNameAssignment_3(), "rule__Course_mandatoryFor_OrGroup__NameAssignment_3");
			builder.put(grammarAccess.getCourse_mandatoryFor_OrGroupAccess().getReferenceAssignment_4_1(), "rule__Course_mandatoryFor_OrGroup__ReferenceAssignment_4_1");
			builder.put(grammarAccess.getCourse_mandatoryFor_OrGroupAccess().getReferenceAssignment_4_2_1(), "rule__Course_mandatoryFor_OrGroup__ReferenceAssignment_4_2_1");
			builder.put(grammarAccess.getUniversityManagementSystem_person_OrGroupAccess().getNegatedAssignment_2_0(), "rule__UniversityManagementSystem_person_OrGroup__NegatedAssignment_2_0");
			builder.put(grammarAccess.getUniversityManagementSystem_person_OrGroupAccess().getTransitiveAssignment_2_1(), "rule__UniversityManagementSystem_person_OrGroup__TransitiveAssignment_2_1");
			builder.put(grammarAccess.getUniversityManagementSystem_person_OrGroupAccess().getGeneralizedAssignment_2_2(), "rule__UniversityManagementSystem_person_OrGroup__GeneralizedAssignment_2_2");
			builder.put(grammarAccess.getUniversityManagementSystem_person_OrGroupAccess().getNameAssignment_3(), "rule__UniversityManagementSystem_person_OrGroup__NameAssignment_3");
			builder.put(grammarAccess.getUniversityManagementSystem_person_OrGroupAccess().getContainmentAssignment_4_1(), "rule__UniversityManagementSystem_person_OrGroup__ContainmentAssignment_4_1");
			builder.put(grammarAccess.getUniversityManagementSystem_person_OrGroupAccess().getContainmentAssignment_4_2_1(), "rule__UniversityManagementSystem_person_OrGroup__ContainmentAssignment_4_2_1");
			builder.put(grammarAccess.getUniversityManagementSystem_course_OrGroupAccess().getNegatedAssignment_2_0(), "rule__UniversityManagementSystem_course_OrGroup__NegatedAssignment_2_0");
			builder.put(grammarAccess.getUniversityManagementSystem_course_OrGroupAccess().getTransitiveAssignment_2_1(), "rule__UniversityManagementSystem_course_OrGroup__TransitiveAssignment_2_1");
			builder.put(grammarAccess.getUniversityManagementSystem_course_OrGroupAccess().getGeneralizedAssignment_2_2(), "rule__UniversityManagementSystem_course_OrGroup__GeneralizedAssignment_2_2");
			builder.put(grammarAccess.getUniversityManagementSystem_course_OrGroupAccess().getNameAssignment_3(), "rule__UniversityManagementSystem_course_OrGroup__NameAssignment_3");
			builder.put(grammarAccess.getUniversityManagementSystem_course_OrGroupAccess().getContainmentAssignment_4_1(), "rule__UniversityManagementSystem_course_OrGroup__ContainmentAssignment_4_1");
			builder.put(grammarAccess.getUniversityManagementSystem_course_OrGroupAccess().getContainmentAssignment_4_2_1(), "rule__UniversityManagementSystem_course_OrGroup__ContainmentAssignment_4_2_1");
			builder.put(grammarAccess.getInteger_PrimitiveArgumentAccess().getValueAssignment_1(), "rule__Integer_PrimitiveArgument__ValueAssignment_1");
			builder.put(grammarAccess.getInteger_PrimitiveArgumentAccess().getOperatorAssignment_2(), "rule__Integer_PrimitiveArgument__OperatorAssignment_2");
			builder.put(grammarAccess.getString_PrimitiveArgumentAccess().getValueAssignment_1(), "rule__String_PrimitiveArgument__ValueAssignment_1");
			builder.put(grammarAccess.getString_PrimitiveArgumentAccess().getOperatorAssignment_2(), "rule__String_PrimitiveArgument__OperatorAssignment_2");
			builder.put(grammarAccess.getInteger_CalculateableElementReferenceArgumentAccess().getReferenceAssignment_2(), "rule__Integer_CalculateableElementReferenceArgument__ReferenceAssignment_2");
			builder.put(grammarAccess.getInteger_CalculateableElementReferenceArgumentAccess().getOperatorAssignment_4(), "rule__Integer_CalculateableElementReferenceArgument__OperatorAssignment_4");
			builder.put(grammarAccess.getString_CalculateableElementReferenceArgumentAccess().getReferenceAssignment_2(), "rule__String_CalculateableElementReferenceArgument__ReferenceAssignment_2");
			builder.put(grammarAccess.getString_CalculateableElementReferenceArgumentAccess().getOperatorAssignment_4(), "rule__String_CalculateableElementReferenceArgument__OperatorAssignment_4");
			builder.put(grammarAccess.getCountable_ReferenceArgumentAccess().getReferenceAssignment_1(), "rule__Countable_ReferenceArgument__ReferenceAssignment_1");
			builder.put(grammarAccess.getInteger_FunctionalParameterAccess().getArgumentAssignment_1(), "rule__Integer_FunctionalParameter__ArgumentAssignment_1");
			builder.put(grammarAccess.getCharacter_FunctionalParameterAccess().getArgumentAssignment_1(), "rule__Character_FunctionalParameter__ArgumentAssignment_1");
			builder.put(grammarAccess.getNumber_FunctionalParameterAccess().getArgumentAssignment_1(), "rule__Number_FunctionalParameter__ArgumentAssignment_1");
			builder.put(grammarAccess.getCharSequence_FunctionalParameterAccess().getArgumentAssignment_1(), "rule__CharSequence_FunctionalParameter__ArgumentAssignment_1");
			builder.put(grammarAccess.getObject_FunctionalParameterAccess().getArgumentAssignment_1(), "rule__Object_FunctionalParameter__ArgumentAssignment_1");
			builder.put(grammarAccess.getString_FunctionalParameterAccess().getArgumentAssignment_1(), "rule__String_FunctionalParameter__ArgumentAssignment_1");
			builder.put(grammarAccess.getBoolean_FunctionalParameterAccess().getArgumentAssignment_1(), "rule__Boolean_FunctionalParameter__ArgumentAssignment_1");
			builder.put(grammarAccess.getDouble_FunctionalParameterAccess().getArgumentAssignment_1(), "rule__Double_FunctionalParameter__ArgumentAssignment_1");
			builder.put(grammarAccess.getCountableReferenceParameterAccess().getArgumentAssignment_1(), "rule__CountableReferenceParameter__ArgumentAssignment_1");
			builder.put(grammarAccess.getInteger_CalculateableParameterAccess().getArgumentAssignment_1(), "rule__Integer_CalculateableParameter__ArgumentAssignment_1");
			builder.put(grammarAccess.getCharacter_CalculateableParameterAccess().getArgumentAssignment_1(), "rule__Character_CalculateableParameter__ArgumentAssignment_1");
			builder.put(grammarAccess.getNumber_CalculateableParameterAccess().getArgumentAssignment_1(), "rule__Number_CalculateableParameter__ArgumentAssignment_1");
			builder.put(grammarAccess.getCharSequence_CalculateableParameterAccess().getArgumentAssignment_1(), "rule__CharSequence_CalculateableParameter__ArgumentAssignment_1");
			builder.put(grammarAccess.getObject_CalculateableParameterAccess().getArgumentAssignment_1(), "rule__Object_CalculateableParameter__ArgumentAssignment_1");
			builder.put(grammarAccess.getString_CalculateableParameterAccess().getArgumentAssignment_1(), "rule__String_CalculateableParameter__ArgumentAssignment_1");
			builder.put(grammarAccess.getBoolean_CalculateableParameterAccess().getArgumentAssignment_1(), "rule__Boolean_CalculateableParameter__ArgumentAssignment_1");
			builder.put(grammarAccess.getDouble_CalculateableParameterAccess().getArgumentAssignment_1(), "rule__Double_CalculateableParameter__ArgumentAssignment_1");
			builder.put(grammarAccess.getCourseType_EnumerationOperatorAccess().getArgumentAssignment_1(), "rule__CourseType_EnumerationOperator__ArgumentAssignment_1");
			builder.put(grammarAccess.getCourseType_EnumerationOperatorAccess().getOrAssignment_2_1(), "rule__CourseType_EnumerationOperator__OrAssignment_2_1");
			builder.put(grammarAccess.getInteger_And_BitOperatorAccess().getNegatedAssignment_2(), "rule__Integer_And_BitOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getInteger_And_BitOperatorAccess().getConnectsAssignment_4(), "rule__Integer_And_BitOperator__ConnectsAssignment_4");
			builder.put(grammarAccess.getInteger_And_BitOperatorAccess().getConnectsAssignment_5_1(), "rule__Integer_And_BitOperator__ConnectsAssignment_5_1");
			builder.put(grammarAccess.getInteger_Or_BitOperatorAccess().getNegatedAssignment_2(), "rule__Integer_Or_BitOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getInteger_Or_BitOperatorAccess().getConnectsAssignment_4(), "rule__Integer_Or_BitOperator__ConnectsAssignment_4");
			builder.put(grammarAccess.getInteger_Or_BitOperatorAccess().getConnectsAssignment_5_1(), "rule__Integer_Or_BitOperator__ConnectsAssignment_5_1");
			builder.put(grammarAccess.getNumber_And_BitOperatorAccess().getNegatedAssignment_2(), "rule__Number_And_BitOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getNumber_And_BitOperatorAccess().getConnectsAssignment_4(), "rule__Number_And_BitOperator__ConnectsAssignment_4");
			builder.put(grammarAccess.getNumber_And_BitOperatorAccess().getConnectsAssignment_5_1(), "rule__Number_And_BitOperator__ConnectsAssignment_5_1");
			builder.put(grammarAccess.getNumber_Or_BitOperatorAccess().getNegatedAssignment_2(), "rule__Number_Or_BitOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getNumber_Or_BitOperatorAccess().getConnectsAssignment_4(), "rule__Number_Or_BitOperator__ConnectsAssignment_4");
			builder.put(grammarAccess.getNumber_Or_BitOperatorAccess().getConnectsAssignment_5_1(), "rule__Number_Or_BitOperator__ConnectsAssignment_5_1");
			builder.put(grammarAccess.getCharacter_And_BitOperatorAccess().getNegatedAssignment_2(), "rule__Character_And_BitOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getCharacter_And_BitOperatorAccess().getConnectsAssignment_4(), "rule__Character_And_BitOperator__ConnectsAssignment_4");
			builder.put(grammarAccess.getCharacter_And_BitOperatorAccess().getConnectsAssignment_5_1(), "rule__Character_And_BitOperator__ConnectsAssignment_5_1");
			builder.put(grammarAccess.getCharacter_Or_BitOperatorAccess().getNegatedAssignment_2(), "rule__Character_Or_BitOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getCharacter_Or_BitOperatorAccess().getConnectsAssignment_4(), "rule__Character_Or_BitOperator__ConnectsAssignment_4");
			builder.put(grammarAccess.getCharacter_Or_BitOperatorAccess().getConnectsAssignment_5_1(), "rule__Character_Or_BitOperator__ConnectsAssignment_5_1");
			builder.put(grammarAccess.getCharSequence_And_BitOperatorAccess().getNegatedAssignment_2(), "rule__CharSequence_And_BitOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getCharSequence_And_BitOperatorAccess().getConnectsAssignment_4(), "rule__CharSequence_And_BitOperator__ConnectsAssignment_4");
			builder.put(grammarAccess.getCharSequence_And_BitOperatorAccess().getConnectsAssignment_5_1(), "rule__CharSequence_And_BitOperator__ConnectsAssignment_5_1");
			builder.put(grammarAccess.getCharSequence_Or_BitOperatorAccess().getNegatedAssignment_2(), "rule__CharSequence_Or_BitOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getCharSequence_Or_BitOperatorAccess().getConnectsAssignment_4(), "rule__CharSequence_Or_BitOperator__ConnectsAssignment_4");
			builder.put(grammarAccess.getCharSequence_Or_BitOperatorAccess().getConnectsAssignment_5_1(), "rule__CharSequence_Or_BitOperator__ConnectsAssignment_5_1");
			builder.put(grammarAccess.getObject_And_BitOperatorAccess().getNegatedAssignment_2(), "rule__Object_And_BitOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getObject_And_BitOperatorAccess().getConnectsAssignment_4(), "rule__Object_And_BitOperator__ConnectsAssignment_4");
			builder.put(grammarAccess.getObject_And_BitOperatorAccess().getConnectsAssignment_5_1(), "rule__Object_And_BitOperator__ConnectsAssignment_5_1");
			builder.put(grammarAccess.getObject_Or_BitOperatorAccess().getNegatedAssignment_2(), "rule__Object_Or_BitOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getObject_Or_BitOperatorAccess().getConnectsAssignment_4(), "rule__Object_Or_BitOperator__ConnectsAssignment_4");
			builder.put(grammarAccess.getObject_Or_BitOperatorAccess().getConnectsAssignment_5_1(), "rule__Object_Or_BitOperator__ConnectsAssignment_5_1");
			builder.put(grammarAccess.getString_And_BitOperatorAccess().getNegatedAssignment_2(), "rule__String_And_BitOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getString_And_BitOperatorAccess().getConnectsAssignment_4(), "rule__String_And_BitOperator__ConnectsAssignment_4");
			builder.put(grammarAccess.getString_And_BitOperatorAccess().getConnectsAssignment_5_1(), "rule__String_And_BitOperator__ConnectsAssignment_5_1");
			builder.put(grammarAccess.getString_Or_BitOperatorAccess().getNegatedAssignment_2(), "rule__String_Or_BitOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getString_Or_BitOperatorAccess().getConnectsAssignment_4(), "rule__String_Or_BitOperator__ConnectsAssignment_4");
			builder.put(grammarAccess.getString_Or_BitOperatorAccess().getConnectsAssignment_5_1(), "rule__String_Or_BitOperator__ConnectsAssignment_5_1");
			builder.put(grammarAccess.getBoolean_And_BitOperatorAccess().getNegatedAssignment_2(), "rule__Boolean_And_BitOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getBoolean_And_BitOperatorAccess().getConnectsAssignment_4(), "rule__Boolean_And_BitOperator__ConnectsAssignment_4");
			builder.put(grammarAccess.getBoolean_And_BitOperatorAccess().getConnectsAssignment_5_1(), "rule__Boolean_And_BitOperator__ConnectsAssignment_5_1");
			builder.put(grammarAccess.getBoolean_Or_BitOperatorAccess().getNegatedAssignment_2(), "rule__Boolean_Or_BitOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getBoolean_Or_BitOperatorAccess().getConnectsAssignment_4(), "rule__Boolean_Or_BitOperator__ConnectsAssignment_4");
			builder.put(grammarAccess.getBoolean_Or_BitOperatorAccess().getConnectsAssignment_5_1(), "rule__Boolean_Or_BitOperator__ConnectsAssignment_5_1");
			builder.put(grammarAccess.getDouble_And_BitOperatorAccess().getNegatedAssignment_2(), "rule__Double_And_BitOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getDouble_And_BitOperatorAccess().getConnectsAssignment_4(), "rule__Double_And_BitOperator__ConnectsAssignment_4");
			builder.put(grammarAccess.getDouble_And_BitOperatorAccess().getConnectsAssignment_5_1(), "rule__Double_And_BitOperator__ConnectsAssignment_5_1");
			builder.put(grammarAccess.getDouble_Or_BitOperatorAccess().getNegatedAssignment_2(), "rule__Double_Or_BitOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getDouble_Or_BitOperatorAccess().getConnectsAssignment_4(), "rule__Double_Or_BitOperator__ConnectsAssignment_4");
			builder.put(grammarAccess.getDouble_Or_BitOperatorAccess().getConnectsAssignment_5_1(), "rule__Double_Or_BitOperator__ConnectsAssignment_5_1");
			builder.put(grammarAccess.getDoubleValue_FunctionalOperatorAccess().getOperatorAssignment_3(), "rule__DoubleValue_FunctionalOperator__OperatorAssignment_3");
			builder.put(grammarAccess.getNumber_Integer_greaterThan_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__Number_Integer_greaterThan_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getNumber_Integer_greaterThan_FunctionalOperatorAccess().getIAssignment_4(), "rule__Number_Integer_greaterThan_FunctionalOperator__IAssignment_4");
			builder.put(grammarAccess.getNumber_Integer_greaterThan_FunctionalOperatorAccess().getOperatorAssignment_6(), "rule__Number_Integer_greaterThan_FunctionalOperator__OperatorAssignment_6");
			builder.put(grammarAccess.getNumber_Integer_greaterEquals_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__Number_Integer_greaterEquals_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getNumber_Integer_greaterEquals_FunctionalOperatorAccess().getIAssignment_4(), "rule__Number_Integer_greaterEquals_FunctionalOperator__IAssignment_4");
			builder.put(grammarAccess.getNumber_Integer_greaterEquals_FunctionalOperatorAccess().getOperatorAssignment_6(), "rule__Number_Integer_greaterEquals_FunctionalOperator__OperatorAssignment_6");
			builder.put(grammarAccess.getNumber_Integer_smallerThan_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__Number_Integer_smallerThan_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getNumber_Integer_smallerThan_FunctionalOperatorAccess().getIAssignment_4(), "rule__Number_Integer_smallerThan_FunctionalOperator__IAssignment_4");
			builder.put(grammarAccess.getNumber_Integer_smallerThan_FunctionalOperatorAccess().getOperatorAssignment_6(), "rule__Number_Integer_smallerThan_FunctionalOperator__OperatorAssignment_6");
			builder.put(grammarAccess.getNumber_Integer_smallerEquals_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__Number_Integer_smallerEquals_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getNumber_Integer_smallerEquals_FunctionalOperatorAccess().getIAssignment_4(), "rule__Number_Integer_smallerEquals_FunctionalOperator__IAssignment_4");
			builder.put(grammarAccess.getNumber_Integer_smallerEquals_FunctionalOperatorAccess().getOperatorAssignment_6(), "rule__Number_Integer_smallerEquals_FunctionalOperator__OperatorAssignment_6");
			builder.put(grammarAccess.getNumber_Integer_Object_Number_equals_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__Number_Integer_Object_Number_equals_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getNumber_Integer_Object_Number_equals_FunctionalOperatorAccess().getObjAssignment_4(), "rule__Number_Integer_Object_Number_equals_FunctionalOperator__ObjAssignment_4");
			builder.put(grammarAccess.getNumber_Integer_Object_Number_equals_FunctionalOperatorAccess().getOperatorAssignment_6(), "rule__Number_Integer_Object_Number_equals_FunctionalOperator__OperatorAssignment_6");
			builder.put(grammarAccess.getNumber_Integer_Object_Number_toString_FunctionalOperatorAccess().getOperatorAssignment_3(), "rule__Number_Integer_Object_Number_toString_FunctionalOperator__OperatorAssignment_3");
			builder.put(grammarAccess.getNumber_Integer_Object_Number_hashCode_FunctionalOperatorAccess().getOperatorAssignment_3(), "rule__Number_Integer_Object_Number_hashCode_FunctionalOperator__OperatorAssignment_3");
			builder.put(grammarAccess.getGreaterThan_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__GreaterThan_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getGreaterThan_FunctionalOperatorAccess().getIAssignment_4(), "rule__GreaterThan_FunctionalOperator__IAssignment_4");
			builder.put(grammarAccess.getGreaterThan_FunctionalOperatorAccess().getOperatorAssignment_6(), "rule__GreaterThan_FunctionalOperator__OperatorAssignment_6");
			builder.put(grammarAccess.getGreaterEquals_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__GreaterEquals_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getGreaterEquals_FunctionalOperatorAccess().getIAssignment_4(), "rule__GreaterEquals_FunctionalOperator__IAssignment_4");
			builder.put(grammarAccess.getGreaterEquals_FunctionalOperatorAccess().getOperatorAssignment_6(), "rule__GreaterEquals_FunctionalOperator__OperatorAssignment_6");
			builder.put(grammarAccess.getSmallerThan_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__SmallerThan_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getSmallerThan_FunctionalOperatorAccess().getIAssignment_4(), "rule__SmallerThan_FunctionalOperator__IAssignment_4");
			builder.put(grammarAccess.getSmallerThan_FunctionalOperatorAccess().getOperatorAssignment_6(), "rule__SmallerThan_FunctionalOperator__OperatorAssignment_6");
			builder.put(grammarAccess.getSmallerEquals_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__SmallerEquals_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getSmallerEquals_FunctionalOperatorAccess().getIAssignment_4(), "rule__SmallerEquals_FunctionalOperator__IAssignment_4");
			builder.put(grammarAccess.getSmallerEquals_FunctionalOperatorAccess().getOperatorAssignment_6(), "rule__SmallerEquals_FunctionalOperator__OperatorAssignment_6");
			builder.put(grammarAccess.getObject_Number_equals_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__Object_Number_equals_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getObject_Number_equals_FunctionalOperatorAccess().getObjAssignment_4(), "rule__Object_Number_equals_FunctionalOperator__ObjAssignment_4");
			builder.put(grammarAccess.getObject_Number_equals_FunctionalOperatorAccess().getOperatorAssignment_6(), "rule__Object_Number_equals_FunctionalOperator__OperatorAssignment_6");
			builder.put(grammarAccess.getObject_Number_toString_FunctionalOperatorAccess().getOperatorAssignment_3(), "rule__Object_Number_toString_FunctionalOperator__OperatorAssignment_3");
			builder.put(grammarAccess.getObject_Number_hashCode_FunctionalOperatorAccess().getOperatorAssignment_3(), "rule__Object_Number_hashCode_FunctionalOperator__OperatorAssignment_3");
			builder.put(grammarAccess.getObject_Character_equals_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__Object_Character_equals_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getObject_Character_equals_FunctionalOperatorAccess().getObjAssignment_4(), "rule__Object_Character_equals_FunctionalOperator__ObjAssignment_4");
			builder.put(grammarAccess.getObject_Character_equals_FunctionalOperatorAccess().getOperatorAssignment_6(), "rule__Object_Character_equals_FunctionalOperator__OperatorAssignment_6");
			builder.put(grammarAccess.getObject_Character_toString_FunctionalOperatorAccess().getOperatorAssignment_3(), "rule__Object_Character_toString_FunctionalOperator__OperatorAssignment_3");
			builder.put(grammarAccess.getObject_Character_hashCode_FunctionalOperatorAccess().getOperatorAssignment_3(), "rule__Object_Character_hashCode_FunctionalOperator__OperatorAssignment_3");
			builder.put(grammarAccess.getLength_FunctionalOperatorAccess().getOperatorAssignment_3(), "rule__Length_FunctionalOperator__OperatorAssignment_3");
			builder.put(grammarAccess.getObject_CharSequence_equals_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__Object_CharSequence_equals_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getObject_CharSequence_equals_FunctionalOperatorAccess().getObjAssignment_4(), "rule__Object_CharSequence_equals_FunctionalOperator__ObjAssignment_4");
			builder.put(grammarAccess.getObject_CharSequence_equals_FunctionalOperatorAccess().getOperatorAssignment_6(), "rule__Object_CharSequence_equals_FunctionalOperator__OperatorAssignment_6");
			builder.put(grammarAccess.getObject_CharSequence_toString_FunctionalOperatorAccess().getOperatorAssignment_3(), "rule__Object_CharSequence_toString_FunctionalOperator__OperatorAssignment_3");
			builder.put(grammarAccess.getObject_CharSequence_hashCode_FunctionalOperatorAccess().getOperatorAssignment_3(), "rule__Object_CharSequence_hashCode_FunctionalOperator__OperatorAssignment_3");
			builder.put(grammarAccess.getEquals_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__Equals_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getEquals_FunctionalOperatorAccess().getObjAssignment_4(), "rule__Equals_FunctionalOperator__ObjAssignment_4");
			builder.put(grammarAccess.getEquals_FunctionalOperatorAccess().getOperatorAssignment_6(), "rule__Equals_FunctionalOperator__OperatorAssignment_6");
			builder.put(grammarAccess.getToString_FunctionalOperatorAccess().getOperatorAssignment_3(), "rule__ToString_FunctionalOperator__OperatorAssignment_3");
			builder.put(grammarAccess.getHashCode_FunctionalOperatorAccess().getOperatorAssignment_3(), "rule__HashCode_FunctionalOperator__OperatorAssignment_3");
			builder.put(grammarAccess.getCharAt_FunctionalOperatorAccess().getIAssignment_3(), "rule__CharAt_FunctionalOperator__IAssignment_3");
			builder.put(grammarAccess.getCharAt_FunctionalOperatorAccess().getOperatorAssignment_5(), "rule__CharAt_FunctionalOperator__OperatorAssignment_5");
			builder.put(grammarAccess.getCodePointAt_FunctionalOperatorAccess().getIndexAssignment_3(), "rule__CodePointAt_FunctionalOperator__IndexAssignment_3");
			builder.put(grammarAccess.getCodePointAt_FunctionalOperatorAccess().getOperatorAssignment_5(), "rule__CodePointAt_FunctionalOperator__OperatorAssignment_5");
			builder.put(grammarAccess.getCodePointBefore_FunctionalOperatorAccess().getIndexAssignment_3(), "rule__CodePointBefore_FunctionalOperator__IndexAssignment_3");
			builder.put(grammarAccess.getCodePointBefore_FunctionalOperatorAccess().getOperatorAssignment_5(), "rule__CodePointBefore_FunctionalOperator__OperatorAssignment_5");
			builder.put(grammarAccess.getCompareToString_FunctionalOperatorAccess().getAnotherStringAssignment_3(), "rule__CompareToString_FunctionalOperator__AnotherStringAssignment_3");
			builder.put(grammarAccess.getCompareToString_FunctionalOperatorAccess().getOperatorAssignment_5(), "rule__CompareToString_FunctionalOperator__OperatorAssignment_5");
			builder.put(grammarAccess.getCompareToStringIgnoreCase_FunctionalOperatorAccess().getStrAssignment_3(), "rule__CompareToStringIgnoreCase_FunctionalOperator__StrAssignment_3");
			builder.put(grammarAccess.getCompareToStringIgnoreCase_FunctionalOperatorAccess().getOperatorAssignment_5(), "rule__CompareToStringIgnoreCase_FunctionalOperator__OperatorAssignment_5");
			builder.put(grammarAccess.getContains_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__Contains_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getContains_FunctionalOperatorAccess().getCharSequenceAssignment_4(), "rule__Contains_FunctionalOperator__CharSequenceAssignment_4");
			builder.put(grammarAccess.getContains_FunctionalOperatorAccess().getOperatorAssignment_6(), "rule__Contains_FunctionalOperator__OperatorAssignment_6");
			builder.put(grammarAccess.getSubstring_FunctionalOperatorAccess().getStartIndexAssignment_3(), "rule__Substring_FunctionalOperator__StartIndexAssignment_3");
			builder.put(grammarAccess.getSubstring_FunctionalOperatorAccess().getEndIndexAssignment_5(), "rule__Substring_FunctionalOperator__EndIndexAssignment_5");
			builder.put(grammarAccess.getSubstring_FunctionalOperatorAccess().getOperatorAssignment_7(), "rule__Substring_FunctionalOperator__OperatorAssignment_7");
			builder.put(grammarAccess.getConcat_FunctionalOperatorAccess().getStrAssignment_3(), "rule__Concat_FunctionalOperator__StrAssignment_3");
			builder.put(grammarAccess.getConcat_FunctionalOperatorAccess().getOperatorAssignment_5(), "rule__Concat_FunctionalOperator__OperatorAssignment_5");
			builder.put(grammarAccess.getEndsWith_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__EndsWith_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getEndsWith_FunctionalOperatorAccess().getSuffixAssignment_4(), "rule__EndsWith_FunctionalOperator__SuffixAssignment_4");
			builder.put(grammarAccess.getEndsWith_FunctionalOperatorAccess().getOperatorAssignment_6(), "rule__EndsWith_FunctionalOperator__OperatorAssignment_6");
			builder.put(grammarAccess.getEqualsIgnoreCase_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__EqualsIgnoreCase_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getEqualsIgnoreCase_FunctionalOperatorAccess().getAnotherStringAssignment_4(), "rule__EqualsIgnoreCase_FunctionalOperator__AnotherStringAssignment_4");
			builder.put(grammarAccess.getEqualsIgnoreCase_FunctionalOperatorAccess().getOperatorAssignment_6(), "rule__EqualsIgnoreCase_FunctionalOperator__OperatorAssignment_6");
			builder.put(grammarAccess.getIndexOfString_FunctionalOperatorAccess().getStrAssignment_3(), "rule__IndexOfString_FunctionalOperator__StrAssignment_3");
			builder.put(grammarAccess.getIndexOfString_FunctionalOperatorAccess().getOperatorAssignment_5(), "rule__IndexOfString_FunctionalOperator__OperatorAssignment_5");
			builder.put(grammarAccess.getIndexOfChar_FunctionalOperatorAccess().getChAssignment_3(), "rule__IndexOfChar_FunctionalOperator__ChAssignment_3");
			builder.put(grammarAccess.getIndexOfChar_FunctionalOperatorAccess().getOperatorAssignment_5(), "rule__IndexOfChar_FunctionalOperator__OperatorAssignment_5");
			builder.put(grammarAccess.getIndexOfCharFromIndex_FunctionalOperatorAccess().getChAssignment_3(), "rule__IndexOfCharFromIndex_FunctionalOperator__ChAssignment_3");
			builder.put(grammarAccess.getIndexOfCharFromIndex_FunctionalOperatorAccess().getFromIndexAssignment_5(), "rule__IndexOfCharFromIndex_FunctionalOperator__FromIndexAssignment_5");
			builder.put(grammarAccess.getIndexOfCharFromIndex_FunctionalOperatorAccess().getOperatorAssignment_7(), "rule__IndexOfCharFromIndex_FunctionalOperator__OperatorAssignment_7");
			builder.put(grammarAccess.getIsEmpty_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__IsEmpty_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getIsEmpty_FunctionalOperatorAccess().getOperatorAssignment_4(), "rule__IsEmpty_FunctionalOperator__OperatorAssignment_4");
			builder.put(grammarAccess.getOffsetByCodePoints_FunctionalOperatorAccess().getIndexAssignment_3(), "rule__OffsetByCodePoints_FunctionalOperator__IndexAssignment_3");
			builder.put(grammarAccess.getOffsetByCodePoints_FunctionalOperatorAccess().getCodePointOffsetAssignment_5(), "rule__OffsetByCodePoints_FunctionalOperator__CodePointOffsetAssignment_5");
			builder.put(grammarAccess.getOffsetByCodePoints_FunctionalOperatorAccess().getOperatorAssignment_7(), "rule__OffsetByCodePoints_FunctionalOperator__OperatorAssignment_7");
			builder.put(grammarAccess.getStartsWith_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__StartsWith_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getStartsWith_FunctionalOperatorAccess().getPrefixAssignment_4(), "rule__StartsWith_FunctionalOperator__PrefixAssignment_4");
			builder.put(grammarAccess.getStartsWith_FunctionalOperatorAccess().getOperatorAssignment_6(), "rule__StartsWith_FunctionalOperator__OperatorAssignment_6");
			builder.put(grammarAccess.getStartsWithOffset_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__StartsWithOffset_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getStartsWithOffset_FunctionalOperatorAccess().getPrefixAssignment_4(), "rule__StartsWithOffset_FunctionalOperator__PrefixAssignment_4");
			builder.put(grammarAccess.getStartsWithOffset_FunctionalOperatorAccess().getToffsetAssignment_6(), "rule__StartsWithOffset_FunctionalOperator__ToffsetAssignment_6");
			builder.put(grammarAccess.getStartsWithOffset_FunctionalOperatorAccess().getOperatorAssignment_8(), "rule__StartsWithOffset_FunctionalOperator__OperatorAssignment_8");
			builder.put(grammarAccess.getToLowerCase_FunctionalOperatorAccess().getOperatorAssignment_3(), "rule__ToLowerCase_FunctionalOperator__OperatorAssignment_3");
			builder.put(grammarAccess.getToUpperCase_FunctionalOperatorAccess().getOperatorAssignment_3(), "rule__ToUpperCase_FunctionalOperator__OperatorAssignment_3");
			builder.put(grammarAccess.getTrim_FunctionalOperatorAccess().getOperatorAssignment_3(), "rule__Trim_FunctionalOperator__OperatorAssignment_3");
			builder.put(grammarAccess.getCharSequence_String_length_FunctionalOperatorAccess().getOperatorAssignment_3(), "rule__CharSequence_String_length_FunctionalOperator__OperatorAssignment_3");
			builder.put(grammarAccess.getCharSequence_String_Object_CharSequence_equals_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__CharSequence_String_Object_CharSequence_equals_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getCharSequence_String_Object_CharSequence_equals_FunctionalOperatorAccess().getObjAssignment_4(), "rule__CharSequence_String_Object_CharSequence_equals_FunctionalOperator__ObjAssignment_4");
			builder.put(grammarAccess.getCharSequence_String_Object_CharSequence_equals_FunctionalOperatorAccess().getOperatorAssignment_6(), "rule__CharSequence_String_Object_CharSequence_equals_FunctionalOperator__OperatorAssignment_6");
			builder.put(grammarAccess.getCharSequence_String_Object_CharSequence_toString_FunctionalOperatorAccess().getOperatorAssignment_3(), "rule__CharSequence_String_Object_CharSequence_toString_FunctionalOperator__OperatorAssignment_3");
			builder.put(grammarAccess.getCharSequence_String_Object_CharSequence_hashCode_FunctionalOperatorAccess().getOperatorAssignment_3(), "rule__CharSequence_String_Object_CharSequence_hashCode_FunctionalOperator__OperatorAssignment_3");
			builder.put(grammarAccess.getParseBoolean_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__ParseBoolean_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getParseBoolean_FunctionalOperatorAccess().getSAssignment_4(), "rule__ParseBoolean_FunctionalOperator__SAssignment_4");
			builder.put(grammarAccess.getParseBoolean_FunctionalOperatorAccess().getOperatorAssignment_6(), "rule__ParseBoolean_FunctionalOperator__OperatorAssignment_6");
			builder.put(grammarAccess.getCompareToBoolean_FunctionalOperatorAccess().getBAssignment_3(), "rule__CompareToBoolean_FunctionalOperator__BAssignment_3");
			builder.put(grammarAccess.getCompareToBoolean_FunctionalOperatorAccess().getOperatorAssignment_5(), "rule__CompareToBoolean_FunctionalOperator__OperatorAssignment_5");
			builder.put(grammarAccess.getObject_Boolean_equals_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__Object_Boolean_equals_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getObject_Boolean_equals_FunctionalOperatorAccess().getObjAssignment_4(), "rule__Object_Boolean_equals_FunctionalOperator__ObjAssignment_4");
			builder.put(grammarAccess.getObject_Boolean_equals_FunctionalOperatorAccess().getOperatorAssignment_6(), "rule__Object_Boolean_equals_FunctionalOperator__OperatorAssignment_6");
			builder.put(grammarAccess.getObject_Boolean_toString_FunctionalOperatorAccess().getOperatorAssignment_3(), "rule__Object_Boolean_toString_FunctionalOperator__OperatorAssignment_3");
			builder.put(grammarAccess.getObject_Boolean_hashCode_FunctionalOperatorAccess().getOperatorAssignment_3(), "rule__Object_Boolean_hashCode_FunctionalOperator__OperatorAssignment_3");
			builder.put(grammarAccess.getNumber_Double_greaterThan_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__Number_Double_greaterThan_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getNumber_Double_greaterThan_FunctionalOperatorAccess().getIAssignment_4(), "rule__Number_Double_greaterThan_FunctionalOperator__IAssignment_4");
			builder.put(grammarAccess.getNumber_Double_greaterThan_FunctionalOperatorAccess().getOperatorAssignment_6(), "rule__Number_Double_greaterThan_FunctionalOperator__OperatorAssignment_6");
			builder.put(grammarAccess.getNumber_Double_greaterEquals_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__Number_Double_greaterEquals_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getNumber_Double_greaterEquals_FunctionalOperatorAccess().getIAssignment_4(), "rule__Number_Double_greaterEquals_FunctionalOperator__IAssignment_4");
			builder.put(grammarAccess.getNumber_Double_greaterEquals_FunctionalOperatorAccess().getOperatorAssignment_6(), "rule__Number_Double_greaterEquals_FunctionalOperator__OperatorAssignment_6");
			builder.put(grammarAccess.getNumber_Double_smallerThan_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__Number_Double_smallerThan_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getNumber_Double_smallerThan_FunctionalOperatorAccess().getIAssignment_4(), "rule__Number_Double_smallerThan_FunctionalOperator__IAssignment_4");
			builder.put(grammarAccess.getNumber_Double_smallerThan_FunctionalOperatorAccess().getOperatorAssignment_6(), "rule__Number_Double_smallerThan_FunctionalOperator__OperatorAssignment_6");
			builder.put(grammarAccess.getNumber_Double_smallerEquals_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__Number_Double_smallerEquals_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getNumber_Double_smallerEquals_FunctionalOperatorAccess().getIAssignment_4(), "rule__Number_Double_smallerEquals_FunctionalOperator__IAssignment_4");
			builder.put(grammarAccess.getNumber_Double_smallerEquals_FunctionalOperatorAccess().getOperatorAssignment_6(), "rule__Number_Double_smallerEquals_FunctionalOperator__OperatorAssignment_6");
			builder.put(grammarAccess.getNumber_Double_Object_Number_equals_FunctionalOperatorAccess().getNegatedAssignment_2(), "rule__Number_Double_Object_Number_equals_FunctionalOperator__NegatedAssignment_2");
			builder.put(grammarAccess.getNumber_Double_Object_Number_equals_FunctionalOperatorAccess().getObjAssignment_4(), "rule__Number_Double_Object_Number_equals_FunctionalOperator__ObjAssignment_4");
			builder.put(grammarAccess.getNumber_Double_Object_Number_equals_FunctionalOperatorAccess().getOperatorAssignment_6(), "rule__Number_Double_Object_Number_equals_FunctionalOperator__OperatorAssignment_6");
			builder.put(grammarAccess.getNumber_Double_Object_Number_toString_FunctionalOperatorAccess().getOperatorAssignment_3(), "rule__Number_Double_Object_Number_toString_FunctionalOperator__OperatorAssignment_3");
			builder.put(grammarAccess.getNumber_Double_Object_Number_hashCode_FunctionalOperatorAccess().getOperatorAssignment_3(), "rule__Number_Double_Object_Number_hashCode_FunctionalOperator__OperatorAssignment_3");
			builder.put(grammarAccess.getAnd_EvaluationBitOperatorAccess().getNegatedAssignment_1(), "rule__And_EvaluationBitOperator__NegatedAssignment_1");
			builder.put(grammarAccess.getAnd_EvaluationBitOperatorAccess().getConnectsAssignment_3(), "rule__And_EvaluationBitOperator__ConnectsAssignment_3");
			builder.put(grammarAccess.getAnd_EvaluationBitOperatorAccess().getConnectsAssignment_4_1(), "rule__And_EvaluationBitOperator__ConnectsAssignment_4_1");
			builder.put(grammarAccess.getOr_EvaluationBitOperatorAccess().getNegatedAssignment_1(), "rule__Or_EvaluationBitOperator__NegatedAssignment_1");
			builder.put(grammarAccess.getOr_EvaluationBitOperatorAccess().getConnectsAssignment_3(), "rule__Or_EvaluationBitOperator__ConnectsAssignment_3");
			builder.put(grammarAccess.getOr_EvaluationBitOperatorAccess().getConnectsAssignment_4_1(), "rule__Or_EvaluationBitOperator__ConnectsAssignment_4_1");
			builder.put(grammarAccess.getCount_AggregationOperatorAccess().getCountableAssignment_2(), "rule__Count_AggregationOperator__CountableAssignment_2");
			builder.put(grammarAccess.getCount_AggregationOperatorAccess().getOperatorAssignment_4(), "rule__Count_AggregationOperator__OperatorAssignment_4");
			builder.put(grammarAccess.getSum_AggregationOperator_IntegerAccess().getCalculateableAssignment_2(), "rule__Sum_AggregationOperator_Integer__CalculateableAssignment_2");
			builder.put(grammarAccess.getSum_AggregationOperator_IntegerAccess().getOperatorAssignment_4(), "rule__Sum_AggregationOperator_Integer__OperatorAssignment_4");
			builder.put(grammarAccess.getMin_AggregationOperator_IntegerAccess().getCalculateableAssignment_2(), "rule__Min_AggregationOperator_Integer__CalculateableAssignment_2");
			builder.put(grammarAccess.getMin_AggregationOperator_IntegerAccess().getOperatorAssignment_4(), "rule__Min_AggregationOperator_Integer__OperatorAssignment_4");
			builder.put(grammarAccess.getMax_AggregationOperator_IntegerAccess().getCalculateableAssignment_2(), "rule__Max_AggregationOperator_Integer__CalculateableAssignment_2");
			builder.put(grammarAccess.getMax_AggregationOperator_IntegerAccess().getOperatorAssignment_4(), "rule__Max_AggregationOperator_Integer__OperatorAssignment_4");
			builder.put(grammarAccess.getIntegerParseInt_ClassOperatorAccess().getCalculateableAssignment_2(), "rule__IntegerParseInt_ClassOperator__CalculateableAssignment_2");
			builder.put(grammarAccess.getIntegerParseInt_ClassOperatorAccess().getOperatorAssignment_4(), "rule__IntegerParseInt_ClassOperator__OperatorAssignment_4");
			builder.put(grammarAccess.getSum_AggregationOperator_DoubleAccess().getCalculateableAssignment_2(), "rule__Sum_AggregationOperator_Double__CalculateableAssignment_2");
			builder.put(grammarAccess.getSum_AggregationOperator_DoubleAccess().getOperatorAssignment_4(), "rule__Sum_AggregationOperator_Double__OperatorAssignment_4");
			builder.put(grammarAccess.getMin_AggregationOperator_DoubleAccess().getCalculateableAssignment_2(), "rule__Min_AggregationOperator_Double__CalculateableAssignment_2");
			builder.put(grammarAccess.getMin_AggregationOperator_DoubleAccess().getOperatorAssignment_4(), "rule__Min_AggregationOperator_Double__OperatorAssignment_4");
			builder.put(grammarAccess.getMax_AggregationOperator_DoubleAccess().getCalculateableAssignment_2(), "rule__Max_AggregationOperator_Double__CalculateableAssignment_2");
			builder.put(grammarAccess.getMax_AggregationOperator_DoubleAccess().getOperatorAssignment_4(), "rule__Max_AggregationOperator_Double__OperatorAssignment_4");
			builder.put(grammarAccess.getProfessor_employeeNumber_AttrEClassAccess().getUnorderedGroup_2(), "rule__Professor_employeeNumber_AttrEClass__UnorderedGroup_2");
			builder.put(grammarAccess.getStudent_matriculationNumber_AttrEClassAccess().getUnorderedGroup_2(), "rule__Student_matriculationNumber_AttrEClass__UnorderedGroup_2");
			builder.put(grammarAccess.getPerson_name_AttrEClassAccess().getUnorderedGroup_2(), "rule__Person_name_AttrEClass__UnorderedGroup_2");
			builder.put(grammarAccess.getCourse_courseNumber_AttrEClassAccess().getUnorderedGroup_2(), "rule__Course_courseNumber_AttrEClass__UnorderedGroup_2");
			builder.put(grammarAccess.getPerson_email_AttrEClassAccess().getUnorderedGroup_2(), "rule__Person_email_AttrEClass__UnorderedGroup_2");
			builder.put(grammarAccess.getCourse_name_AttrEClassAccess().getUnorderedGroup_2(), "rule__Course_name_AttrEClass__UnorderedGroup_2");
			builder.put(grammarAccess.getExam_examID_AttrEClassAccess().getUnorderedGroup_2(), "rule__Exam_examID_AttrEClass__UnorderedGroup_2");
			builder.put(grammarAccess.getStudent_attends_OrGroupAccess().getUnorderedGroup_2(), "rule__Student_attends_OrGroup__UnorderedGroup_2");
			builder.put(grammarAccess.getProfessor_lectures_OrGroupAccess().getUnorderedGroup_2(), "rule__Professor_lectures_OrGroup__UnorderedGroup_2");
			builder.put(grammarAccess.getCourse_exam_OrGroupAccess().getUnorderedGroup_2(), "rule__Course_exam_OrGroup__UnorderedGroup_2");
			builder.put(grammarAccess.getCourse_mandatoryFor_OrGroupAccess().getUnorderedGroup_2(), "rule__Course_mandatoryFor_OrGroup__UnorderedGroup_2");
			builder.put(grammarAccess.getUniversityManagementSystem_person_OrGroupAccess().getUnorderedGroup_2(), "rule__UniversityManagementSystem_person_OrGroup__UnorderedGroup_2");
			builder.put(grammarAccess.getUniversityManagementSystem_course_OrGroupAccess().getUnorderedGroup_2(), "rule__UniversityManagementSystem_course_OrGroup__UnorderedGroup_2");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MQLGrammarAccess grammarAccess;

	@Override
	protected InternalMQLParser createParser() {
		InternalMQLParser result = new InternalMQLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MQLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MQLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
