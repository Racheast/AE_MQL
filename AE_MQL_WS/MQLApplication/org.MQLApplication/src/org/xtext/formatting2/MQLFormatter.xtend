/*
 * generated by Xtext 2.14.0
 */
package org.xtext.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.services.MQLGrammarAccess
import qmm.FindQuery
import qmm.FindQueryCollection

class MQLFormatter extends AbstractFormatter2 {
	
	@Inject extension MQLGrammarAccess

	def dispatch void format(FindQueryCollection findQueryCollection, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (findQuery : findQueryCollection.findQueries) {
			findQuery.format
		}
	}

	def dispatch void format(FindQuery findQuery, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (rootClass : findQuery.rootClass) {
			rootClass.format
		}
		findQuery.select.format
	}
	
	// TODO: implement for Person, Student, Professor, Course, UniversityManagementSystem, Exam, Course_courseType_AttrEClass, Person_email_AttrEClass, Course_name_AttrEClass, Person_name_AttrEClass, Student_matriculationNumber_AttrEClass, Professor_employeeNumber_AttrEClass, Course_courseNumber_AttrEClass, Exam_examID_AttrEClass, Exam_Containment_OrGroup, Person_Containment_OrGroup, Course_Containment_OrGroup, Integer_PrimitiveArgument, String_PrimitiveArgument, Integer_CalculateableElementReferenceArgument, String_CalculateableElementReferenceArgument, Integer_FunctionalParameter, Character_FunctionalParameter, Number_FunctionalParameter, CharSequence_FunctionalParameter, Object_FunctionalParameter, String_FunctionalParameter, Boolean_FunctionalParameter, Double_FunctionalParameter, CountableReferenceParameter, Integer_CalculateableParameter, Character_CalculateableParameter, Number_CalculateableParameter, CharSequence_CalculateableParameter, Object_CalculateableParameter, String_CalculateableParameter, Boolean_CalculateableParameter, Double_CalculateableParameter, CourseType_EnumerationOperator, Integer_And_BitOperator, Integer_Or_BitOperator, Number_And_BitOperator, Number_Or_BitOperator, Character_And_BitOperator, Character_Or_BitOperator, CharSequence_And_BitOperator, CharSequence_Or_BitOperator, Object_And_BitOperator, Object_Or_BitOperator, String_And_BitOperator, String_Or_BitOperator, Boolean_And_BitOperator, Boolean_Or_BitOperator, Double_And_BitOperator, Double_Or_BitOperator, doubleValue_FunctionalOperator, Number_Integer_greaterThan_FunctionalOperator, Number_Integer_greaterEquals_FunctionalOperator, Number_Integer_smallerThan_FunctionalOperator, Number_Integer_smallerEquals_FunctionalOperator, Number_Integer_Object_Number_equals_FunctionalOperator, Number_Integer_Object_Number_toString_FunctionalOperator, Number_Integer_Object_Number_hashCode_FunctionalOperator, greaterThan_FunctionalOperator, greaterEquals_FunctionalOperator, smallerThan_FunctionalOperator, smallerEquals_FunctionalOperator, Object_Number_equals_FunctionalOperator, Object_Number_toString_FunctionalOperator, Object_Number_hashCode_FunctionalOperator, Object_Character_equals_FunctionalOperator, Object_Character_toString_FunctionalOperator, Object_Character_hashCode_FunctionalOperator, length_FunctionalOperator, Object_CharSequence_equals_FunctionalOperator, Object_CharSequence_toString_FunctionalOperator, Object_CharSequence_hashCode_FunctionalOperator, equals_FunctionalOperator, toString_FunctionalOperator, hashCode_FunctionalOperator, charAt_FunctionalOperator, codePointAt_FunctionalOperator, codePointBefore_FunctionalOperator, compareToString_FunctionalOperator, compareToStringIgnoreCase_FunctionalOperator, contains_FunctionalOperator, substring_FunctionalOperator, concat_FunctionalOperator, endsWith_FunctionalOperator, equalsIgnoreCase_FunctionalOperator, indexOfString_FunctionalOperator, indexOfChar_FunctionalOperator, indexOfCharFromIndex_FunctionalOperator, isEmpty_FunctionalOperator, offsetByCodePoints_FunctionalOperator, startsWith_FunctionalOperator, startsWithOffset_FunctionalOperator, toLowerCase_FunctionalOperator, toUpperCase_FunctionalOperator, trim_FunctionalOperator, CharSequence_String_length_FunctionalOperator, CharSequence_String_Object_CharSequence_equals_FunctionalOperator, CharSequence_String_Object_CharSequence_toString_FunctionalOperator, CharSequence_String_Object_CharSequence_hashCode_FunctionalOperator, parseBoolean_FunctionalOperator, compareToBoolean_FunctionalOperator, Object_Boolean_equals_FunctionalOperator, Object_Boolean_toString_FunctionalOperator, Object_Boolean_hashCode_FunctionalOperator, Number_Double_greaterThan_FunctionalOperator, Number_Double_greaterEquals_FunctionalOperator, Number_Double_smallerThan_FunctionalOperator, Number_Double_smallerEquals_FunctionalOperator, Number_Double_Object_Number_equals_FunctionalOperator, Number_Double_Object_Number_toString_FunctionalOperator, Number_Double_Object_Number_hashCode_FunctionalOperator, And_EvaluationBitOperator, Or_EvaluationBitOperator, Count_AggregationOperator, Sum_AggregationOperator_Integer, Min_AggregationOperator_Integer, Max_AggregationOperator_Integer, IntegerParseInt_ClassOperator, Sum_AggregationOperator_Double, Min_AggregationOperator_Double, Max_AggregationOperator_Double
}
